#!/usr/bin/env python
# -*- coding: utf-8 -*-
# generated by wxGlade 0.6.3 on Wed Apr 11 17:48:58 2012

from datetime import datetime
from sys import platform
from timeNtp import timestampNtp
from time import sleep
import wx

# begin wxGlade: extracode
# end wxGlade

PLAY = '_play'
STOP = '_stop'


_switch_status = { \
  PLAY: STOP, \
  STOP: PLAY, \
}


def sleeper():
    sleep(.001)
    return 1 # don't forget this otherwise the timeout will be removed


class Frame(wx.Frame):
    def __init__(self, *args, **kwds):

        self._status = STOP

        # begin wxGlade: Frame.__init__
        wx.Frame.__init__(self, *args, **kwds)
        self.sizer_3_staticbox = wx.StaticBox(self, -1, "Messaggi")
        self.bitmap_button_1 = wx.BitmapButton(self, -1, wx.Bitmap("/home/gpantanetti/src/nemesys-light/gui/play.png", wx.BITMAP_TYPE_ANY))
        self.bitmap_5 = wx.StaticBitmap(self, -1, wx.Bitmap("/home/gpantanetti/src/nemesys-light/icons/logo_nemesys.png", wx.BITMAP_TYPE_ANY))
        self.label_5 = wx.StaticText(self, -1, "Ne.Me.Sys.", style = wx.ALIGN_CENTRE)
        self.label_6 = wx.StaticText(self, -1, "light", style = wx.ALIGN_CENTRE)
        self.bitmap_1 = wx.StaticBitmap(self, -1, wx.Bitmap("/home/gpantanetti/src/nemesys-light/gui/cpu_gray.png", wx.BITMAP_TYPE_ANY))
        self.bitmap_2 = wx.StaticBitmap(self, -1, wx.Bitmap("/home/gpantanetti/src/nemesys-light/gui/mem_gray.png", wx.BITMAP_TYPE_ANY))
        self.bitmap_3 = wx.StaticBitmap(self, -1, wx.Bitmap("/home/gpantanetti/src/nemesys-light/gui/wifi_gray.png", wx.BITMAP_TYPE_ANY))
        self.bitmap_4 = wx.StaticBitmap(self, -1, wx.Bitmap("/home/gpantanetti/src/nemesys-light/gui/host_gray.png", wx.BITMAP_TYPE_ANY))
        self.label_1 = wx.StaticText(self, -1, "CPU", style = wx.ALIGN_CENTRE)
        self.label_2 = wx.StaticText(self, -1, "Memoria", style = wx.ALIGN_CENTRE)
        self.label_3 = wx.StaticText(self, -1, "Wi-fi", style = wx.ALIGN_CENTRE)
        self.label_4 = wx.StaticText(self, -1, "Host", style = wx.ALIGN_CENTRE)
        self.gauge_1 = wx.Gauge(self, -1, 10, style = wx.GA_HORIZONTAL | wx.GA_SMOOTH)
        self.text_ctrl_1 = wx.TextCtrl(self, -1, "", style = wx.TE_MULTILINE | wx.TE_READONLY | wx.TE_RICH | wx.TE_RICH2 | wx.TE_WORDWRAP)

        self.__set_properties()
        self.__do_layout()

        self.Bind(wx.EVT_BUTTON, self._switch, self.bitmap_button_1)
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: Frame.__set_properties
        self.SetTitle("Ne.Me.Sys. Light")
        self.SetSize((600, 271))
        self.bitmap_button_1.SetMinSize((132, 132))
        self.bitmap_5.SetMinSize((95, 65))
        self.label_5.SetFont(wx.Font(18, wx.ROMAN, wx.NORMAL, wx.NORMAL, 0, ""))
        self.label_6.SetFont(wx.Font(14, wx.ROMAN, wx.ITALIC, wx.NORMAL, 0, ""))
        self.bitmap_1.SetMinSize((60, 60))
        self.bitmap_2.SetMinSize((60, 60))
        self.bitmap_3.SetMinSize((60, 60))
        self.bitmap_4.SetMinSize((60, 60))
        self.gauge_1.SetMinSize((420, 24))
        self.text_ctrl_1.SetMinSize((420, 120))
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: Frame.__do_layout
        sizer_1 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_2 = wx.BoxSizer(wx.VERTICAL)
        sizer_3 = wx.StaticBoxSizer(self.sizer_3_staticbox, wx.HORIZONTAL)
        grid_sizer_1 = wx.GridSizer(2, 4, 0, 0)
        sizer_4 = wx.BoxSizer(wx.VERTICAL)
        sizer_4.Add(self.bitmap_button_1, 0, wx.ALL | wx.ALIGN_CENTER_HORIZONTAL | wx.ALIGN_CENTER_VERTICAL, 4)
        sizer_4.Add(self.bitmap_5, 0, wx.ALL | wx.ALIGN_CENTER_HORIZONTAL | wx.ALIGN_CENTER_VERTICAL, 4)
        sizer_4.Add(self.label_5, 0, wx.ALIGN_CENTER_HORIZONTAL | wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_4.Add(self.label_6, 0, wx.ALIGN_CENTER_HORIZONTAL | wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_1.Add(sizer_4, 0, wx.ALIGN_CENTER_HORIZONTAL | wx.ALIGN_CENTER_VERTICAL, 2)
        grid_sizer_1.Add(self.bitmap_1, 0, wx.ALL | wx.ALIGN_CENTER_HORIZONTAL | wx.ALIGN_CENTER_VERTICAL, 2)
        grid_sizer_1.Add(self.bitmap_2, 0, wx.ALL | wx.ALIGN_CENTER_HORIZONTAL | wx.ALIGN_CENTER_VERTICAL, 2)
        grid_sizer_1.Add(self.bitmap_3, 0, wx.ALL | wx.ALIGN_CENTER_HORIZONTAL | wx.ALIGN_CENTER_VERTICAL, 2)
        grid_sizer_1.Add(self.bitmap_4, 0, wx.ALL | wx.ALIGN_CENTER_HORIZONTAL | wx.ALIGN_CENTER_VERTICAL, 2)
        grid_sizer_1.Add(self.label_1, 0, wx.ALL | wx.ALIGN_CENTER_HORIZONTAL | wx.ALIGN_CENTER_VERTICAL, 2)
        grid_sizer_1.Add(self.label_2, 0, wx.ALL | wx.ALIGN_CENTER_HORIZONTAL | wx.ALIGN_CENTER_VERTICAL, 2)
        grid_sizer_1.Add(self.label_3, 0, wx.ALL | wx.ALIGN_CENTER_HORIZONTAL | wx.ALIGN_CENTER_VERTICAL, 2)
        grid_sizer_1.Add(self.label_4, 0, wx.ALL | wx.ALIGN_CENTER_HORIZONTAL | wx.ALIGN_CENTER_VERTICAL, 2)
        sizer_2.Add(grid_sizer_1, 1, wx.ALL | wx.EXPAND | wx.ALIGN_CENTER_HORIZONTAL | wx.ALIGN_CENTER_VERTICAL, 4)
        sizer_2.Add(self.gauge_1, 0, wx.ALIGN_CENTER_HORIZONTAL | wx.ALIGN_CENTER_VERTICAL, 8)
        sizer_3.Add(self.text_ctrl_1, 0, wx.ALL | wx.EXPAND | wx.ALIGN_CENTER_HORIZONTAL | wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_2.Add(sizer_3, 0, wx.ALL | wx.ALIGN_CENTER_HORIZONTAL | wx.ALIGN_CENTER_VERTICAL, 2)
        sizer_1.Add(sizer_2, 1, wx.EXPAND, 0)
        self.SetSizer(sizer_1)
        self.Layout()
        # end wxGlade

    def _play(self):
      self.bitmap_button_1.SetBitmapLabel(wx.Bitmap("/home/gpantanetti/src/nemesys-light/gui/stop.png"))
      self._update_messages("Event handler `play' not implemented")

    def _stop(self):
      self.bitmap_button_1.SetBitmapLabel(wx.Bitmap("/home/gpantanetti/src/nemesys-light/gui/play.png"))
      self._update_messages("Event handler `stop' not implemented")

    def _switch(self, event):

      self._status = _switch_status[self._status]

      try:
        method = getattr(self, self._status)
      except AttributeError:
        print self._status, "not found"
      else:
        method()

    def _update_messages(self, message):
      date = '\n%s' % getdate().strftime('%c')
      self.text_ctrl_1.AppendText("%s %s" % (date, message))

def getdate():
  return datetime.fromtimestamp(timestampNtp())

if __name__ == "__main__":
  app = wx.PySimpleApp(0)
  #if platform == 'win32':
  #  wx.CallLater(200, sleeper)
  wx.InitAllImageHandlers()
  frame_1 = Frame(None, -1, "", style = wx.DEFAULT_FRAME_STYLE & ~(wx.RESIZE_BORDER | wx.RESIZE_BOX))
  app.SetTopWindow(frame_1)
  frame_1.Show()
  app.MainLoop()
